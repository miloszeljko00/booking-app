/*
 * FlightBookingAPI
 *
 * API aplikacije za kupovinu avionskih karata
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using FlightsBookingAPI.Attributes;
using FlightsBookingAPI.Models;
using System.Threading.Tasks;

namespace FlightsBookingAPI.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class FlightApiController : ControllerBase
    { 
        /// <summary>
        /// DELETE Flight
        /// </summary>
        /// <remarks>Endpoint za brisanje leta.</remarks>
        /// <param name="flightId">Identifikator leta.</param>
        /// <response code="204">No Content</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        [HttpDelete]
        [Route("/flights/{FlightId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFlightsId")]
        public abstract Task<IActionResult> DeleteFlightsIdAsync([FromRoute (Name = "FlightId")][Required]Guid flightId);

        /// <summary>
        /// GET Flights
        /// </summary>
        /// <remarks>Endpoint dobavlja podatke o svim letovima.</remarks>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/flights")]
        [ValidateModelState]
        [SwaggerOperation("GetFlights")]
        [SwaggerResponse(statusCode: 200, type: typeof(FlightGetAllResponse), description: "OK")]
        public abstract Task<ActionResult<FlightGetAllResponse>> GetFlights();

        /// <summary>
        /// GET Flight
        /// </summary>
        /// <remarks>Endpoint za dobavljanje podataka o odabranom letu.</remarks>
        /// <param name="flightId">Identifikator leta.</param>
        /// <response code="200">OK</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        [HttpGet]
        [Route("/flights/{FlightId}")]
        [ValidateModelState]
        [SwaggerOperation("GetFlightsId")]
        [SwaggerResponse(statusCode: 200, type: typeof(FlightGetResponse), description: "OK")]
        public abstract Task<ActionResult<FlightGetResponse>> GetFlightsId([FromRoute (Name = "FlightId")][Required]Guid flightId);

        /// <summary>
        /// POST Flight
        /// </summary>
        /// <remarks>Endpoint za kreiranje novog leta.</remarks>
        /// <param name="flightCreateRequest">Saljemo podatke o mestu i vremenu polaska i dolaska, broju i ceni karata.</param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/flights")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFlights")]
        public abstract Task<ActionResult<FlightCreateRequest>> PostFlights([FromBody]FlightCreateRequest flightCreateRequest);

        /// <summary>
        /// ACTION BuyTicket
        /// </summary>
        /// <remarks>Endpoint za kupovinu karata od strane korisnika.</remarks>
        /// <param name="flightId">Identifikator leta.</param>
        /// <param name="flightBuyTicketsRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request: Please specify the amount of tickets.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found: Flight not found.</response>
        /// <response code="409">Conflict: No available tickets for choosen flight.</response>
        [HttpPost]
        [Route("/flights/{FlightId}/actions/buy-tickets")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFlightsIdActionsBuyTicket")]
        [SwaggerResponse(statusCode: 200, type: typeof(FlightBuyTicketsResponse), description: "OK")]
        public abstract IActionResult PostFlightsIdActionsBuyTicket([FromRoute (Name = "FlightId")][Required]Guid flightId, [FromBody]FlightBuyTicketsRequest flightBuyTicketsRequest);

        [HttpGet]
        [Route("/search")]
        [ValidateModelState]
        [SwaggerOperation("SearchFlights")]
        [SwaggerResponse(statusCode: 200, type: typeof(FlightGetAllResponse), description: "OK")]
        public abstract Task<ActionResult<FlightGetAllResponse>> SearchFlights(string arrivalPlace, string departurePlace, DateTime departureDate, int availableTickets);
    }
}
