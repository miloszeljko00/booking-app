version: "3.8"
services:
  accommodation-service:
    container_name: accommodation-service
    build:
      context: ../backend/Accomodation
      dockerfile: ./Accomodation/Dockerfile 
    environment:
      ASPNETCORE_ENVIRONMENT : Container
      MongoDatabaseSettings:ConnectionString: mongodb+srv://svenadev:0mSCxqslvdQV46wi@booking-app.udfgsob.mongodb.net/?retryWrites=true&w=majority
      Jwt:Authority: https://login-keycloak.azurewebsites.net/auth/realms/booking-app
      Jwt:AuthorizationUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/auth
      Jwt:TokenUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/token
    networks:
      - docker-network
  #----------------------------------------------------------------
  accommodation-grading-service:
    container_name: accommodation-grading-service
    build:
      context: ../backend/Accomodation
      dockerfile: ./AccomodationGrading/Dockerfile 
    environment:
      ASPNETCORE_ENVIRONMENT : Container
      MongoDatabaseSettings:ConnectionString: mongodb+srv://svenadev:0mSCxqslvdQV46wi@booking-app.udfgsob.mongodb.net/?retryWrites=true&w=majority
      Jwt:Authority: https://login-keycloak.azurewebsites.net/auth/realms/booking-app
      Jwt:AuthorizationUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/auth
      Jwt:TokenUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/token
    networks:
      - docker-network
  #----------------------------------------------------------------
  accommodation-suggestion-service:
    container_name: accommodation-suggestion-service
    build:
      context: ../backend/Accomodation
      dockerfile: ./AccomodationSuggestion/Dockerfile 
    environment:
      ASPNETCORE_ENVIRONMENT : Container
      MongoDatabaseSettings:ConnectionString: mongodb+srv://svenadev:0mSCxqslvdQV46wi@booking-app.udfgsob.mongodb.net/?retryWrites=true&w=majority
      Jwt:Authority: https://login-keycloak.azurewebsites.net/auth/realms/booking-app
      Jwt:AuthorizationUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/auth
      Jwt:TokenUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/token
    networks:
      - docker-network
  #----------------------------------------------------------------
  user-management-service:
    container_name: user-management-service
    build:
      context: ../backend/Accomodation
      dockerfile: ./UserManagement/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT : Container
      MongoDatabaseSettings: ConnectionString:mongodb+srv://svenadev:0mSCxqslvdQV46wi@booking-app.udfgsob.mongodb.net/?retryWrites=true&w=majority
      Jwt:Authority: https://login-keycloak.azurewebsites.net/auth/realms/booking-app
      Jwt:AuthorizationUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/auth
      Jwt:TokenUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/token
    networks:
      - docker-network
  #----------------------------------------------------------------
  notification-service:
    container_name: notification-service
    build:
      context: ../backend/Accomodation
      dockerfile: ./Notification/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT : Container
      MongoDatabaseSettings:ConnectionString: mongodb+srv://svenadev:0mSCxqslvdQV46wi@booking-app.udfgsob.mongodb.net/?retryWrites=true&w=majority
      Jwt:Authority: https://login-keycloak.azurewebsites.net/auth/realms/booking-app
      Jwt:AuthorizationUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/auth
      Jwt:TokenUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/token
    networks:
      - docker-network
#----------------------------------------------------------------
  ocelot-apigateway:
    container_name: ocelot-apigateway
    build:
      context: ../backend/Accomodation
      dockerfile: ./Accomodation.ApiGateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT : Container
    ports:
      - "8080:80"
      - "4430:443"
    networks:
      - docker-network
#----------------------------------------------------------------
  flights-booking-service:
    container_name: flights-booking-service
    build:
      context: ../backend/flights-booking-api
      dockerfile: ./src/FlightsBookingApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT : Development
      ENABLE_CORS: true
      MongoDatabaseSettings:ConnectionString: mongodb+srv://svenadev:0mSCxqslvdQV46wi@booking-app.udfgsob.mongodb.net/?retryWrites=true&w=majority
      Jwt:Authority: https://login-keycloak.azurewebsites.net/auth/realms/booking-app
      Jwt:AuthorizationUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/auth
      Jwt:TokenUrl: https://login-keycloak.azurewebsites.net/auth/realms/booking-app/protocol/openid-connect/token
    ports:
      - "54321:80"
      - "54322:443"
    networks:
      - docker-network
#----------------------------------------------------------------
  booking-webapp:
    environment:
      - NODE_ENV=development
    container_name: booking-webapp
    build:
      context: ../accommodation-frontend
      dockerfile: ./Development.Dockerfile
    ports:
      - "4200:80"
  flights-webapp:
    environment:
      - NODE_ENV=development
    container_name: flights-webapp
    build:
      context: ../frontend
      dockerfile: ./Development.Dockerfile
    ports:
      - "4201:80"
networks:
  docker-network: